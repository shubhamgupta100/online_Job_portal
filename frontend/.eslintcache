[{"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\index.js":"1","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\App.js":"2","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\Login.js":"4","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\Logout.js":"5","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\Welcome.js":"6","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\Navbar.js":"7","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\Applications.js":"8","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\Profile.js":"9","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\Signup.js":"10","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\Home.js":"11","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\recruiter\\MyJobs.js":"12","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\recruiter\\CreateJobs.js":"13","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\recruiter\\AcceptedApplicants.js":"14","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\recruiter\\Profile.js":"15","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\recruiter\\JobApplications.js":"16","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\lib\\MessagePopup.js":"17","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\lib\\isAuth.js":"18","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\lib\\PasswordInput.js":"19","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\lib\\apiList.js":"20","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\lib\\EmailInput.js":"21","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\lib\\FileUploadInput.js":"22"},{"size":500,"mtime":1646828793051,"results":"23","hashOfConfig":"24"},{"size":3332,"mtime":1646828792924,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1646828793090,"results":"26","hashOfConfig":"24"},{"size":3690,"mtime":1649422626838,"results":"27","hashOfConfig":"24"},{"size":489,"mtime":1646828793270,"results":"28","hashOfConfig":"24"},{"size":738,"mtime":1646828793416,"results":"29","hashOfConfig":"24"},{"size":4798,"mtime":1649500767355,"results":"30","hashOfConfig":"24"},{"size":7621,"mtime":1649508049690,"results":"31","hashOfConfig":"24"},{"size":8750,"mtime":1649508114350,"results":"32","hashOfConfig":"24"},{"size":14588,"mtime":1649422939664,"results":"33","hashOfConfig":"24"},{"size":20854,"mtime":1649424116323,"results":"34","hashOfConfig":"24"},{"size":26877,"mtime":1649503127053,"results":"35","hashOfConfig":"24"},{"size":8457,"mtime":1649500190017,"results":"36","hashOfConfig":"24"},{"size":25295,"mtime":1649507857421,"results":"37","hashOfConfig":"24"},{"size":5339,"mtime":1649499980201,"results":"38","hashOfConfig":"24"},{"size":23646,"mtime":1649507801870,"results":"39","hashOfConfig":"24"},{"size":503,"mtime":1646828793715,"results":"40","hashOfConfig":"24"},{"size":165,"mtime":1646828793815,"results":"41","hashOfConfig":"24"},{"size":1666,"mtime":1646828793749,"results":"42","hashOfConfig":"24"},{"size":753,"mtime":1649495536030,"results":"43","hashOfConfig":"24"},{"size":1167,"mtime":1646828793642,"results":"44","hashOfConfig":"24"},{"size":3279,"mtime":1646828793678,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"111femr",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\index.js",[],["97","98"],"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\App.js",["99"],"import { createContext, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\n\nimport Welcome, { ErrorPage } from \"./component/Welcome\";\nimport Navbar from \"./component/Navbar\";\nimport Login from \"./component/Login\";\nimport Logout from \"./component/Logout\";\nimport Signup from \"./component/Signup\";\nimport Home from \"./component/Home\";\nimport Applications from \"./component/Applications\";\nimport Profile from \"./component/Profile\";\nimport CreateJobs from \"./component/recruiter/CreateJobs\";\nimport MyJobs from \"./component/recruiter/MyJobs\";\nimport JobApplications from \"./component/recruiter/JobApplications\";\nimport AcceptedApplicants from \"./component/recruiter/AcceptedApplicants\";\nimport RecruiterProfile from \"./component/recruiter/Profile\";\nimport MessagePopup from \"./lib/MessagePopup\";\nimport isAuth, { userType } from \"./lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"98vh\",\n    paddingTop: \"64px\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n}));\n\nexport const SetPopupContext = createContext();\n\nfunction App() {\n  const classes = useStyles();\n  const [popup, setPopup] = useState({\n    open: false,\n    severity: \"\",\n    message: \"\",\n  });\n  return (\n    <BrowserRouter>\n      <SetPopupContext.Provider value={setPopup}>\n        <Grid container direction=\"column\">\n          <Grid item xs>\n            <Navbar />\n          </Grid>\n          <Grid item className={classes.body}>\n            <Switch>\n              <Route exact path=\"/\">\n                <Welcome />\n              </Route>\n              <Route exact path=\"/login\">\n                <Login />\n              </Route>\n              <Route exact path=\"/signup\">\n                <Signup />\n              </Route>\n              <Route exact path=\"/logout\">\n                <Logout />\n              </Route>\n              <Route exact path=\"/home\">\n                <Home />\n              </Route>\n              <Route exact path=\"/applications\">\n                <Applications />\n              </Route>\n              <Route exact path=\"/profile\">\n                {userType() === \"recruiter\" ? (\n                  <RecruiterProfile />\n                ) : (\n                  <Profile />\n                )}\n              </Route>\n              <Route exact path=\"/addjob\">\n                <CreateJobs />\n              </Route>\n              <Route exact path=\"/myjobs\">\n                <MyJobs />\n              </Route>\n              <Route exact path=\"/job/applications/:jobId\">\n                <JobApplications />\n              </Route>\n              <Route exact path=\"/employees\">\n                <AcceptedApplicants />\n              </Route>\n              <Route>\n                <ErrorPage />\n              </Route>\n            </Switch>\n          </Grid>\n        </Grid>\n        <MessagePopup\n          open={popup.open}\n          setOpen={(status) =>\n            setPopup({\n              ...popup,\n              open: status,\n            })\n          }\n          severity={popup.severity}\n          message={popup.message}\n        />\n      </SetPopupContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\Login.js",["100","101"],"import { useContext, useState } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n  Paper,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n  },\n  inputBox: {\n    width: \"300px\",\n  },\n  submitButton: {\n    width: \"300px\",\n  },\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [loginDetails, setLoginDetails] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      error: false,\n      message: \"\",\n    },\n    password: {\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setLoginDetails({\n      ...loginDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const verified = !Object.keys(inputErrorHandler).some((obj) => {\n      return inputErrorHandler[obj].error;\n    });\n    if (verified) {\n      axios\n        .post(apiList.login, loginDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <div className=\"Login_container\">\n      <Paper elevation={1} className=\"card\">\n        <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n          <Grid item>\n            <Typography variant=\"h3\" component=\"h2\">\n              Login\n            </Typography>\n          </Grid>\n          <Grid item>\n            <EmailInput\n              label=\"Email\"\n              value={loginDetails.email}\n              onChange={(event) => handleInput(\"email\", event.target.value)}\n              inputErrorHandler={inputErrorHandler}\n              handleInputError={handleInputError}\n              className={classes.inputBox}\n            />\n          </Grid>\n          <Grid item>\n            <PasswordInput\n              label=\"Password\"\n              value={loginDetails.password}\n              onChange={(event) => handleInput(\"password\", event.target.value)}\n              className={classes.inputBox}\n            />\n          </Grid>\n          <Grid item>\n            <button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"btn\"\n              onClick={() => handleLogin()}\n              // className={classes.submitButton}\n            >\n              Login\n            </button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Login;\n","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\Logout.js",["102"],"import { useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { SetPopupContext } from \"../App\";\n\nconst Logout = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"type\");\n    setPopup({\n      open: true,\n      severity: \"success\",\n      message: \"Logged out successfully\",\n    });\n  }, []);\n  return <Redirect to=\"/login\" />;\n};\n\nexport default Logout;\n","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\Welcome.js",[],"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\Navbar.js",["103"],"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\Applications.js",["104","105","106","107","108","109","110","111","112","113"],"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\Profile.js",["114","115","116","117","118","119","120","121"],"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\Signup.js",["122","123"],"import { useState, useContext } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n  Paper,\n  MenuItem,\n  Input,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport ChipInput from \"material-ui-chip-input\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\n\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n  },\n  inputBox: {\n    width: \"400px\",\n  },\n  submitButton: {\n    width: \"400px\",\n  },\n}));\n\nconst MultifieldInput = (props) => {\n  const classes = useStyles();\n  const { education, setEducation } = props;\n\n  return (\n    <>\n      {education.map((obj, key) => (\n        <Grid\n          item\n          container\n          className={classes.inputBox}\n          key={key}\n          style={{ paddingLeft: 0, paddingRight: 0 }}\n        >\n          <Grid item xs={6}>\n            <TextField\n              label={`Institution Name #${key + 1}`}\n              value={education[key].institutionName}\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].institutionName = event.target.value;\n                setEducation(newEdu);\n              }}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"Start Year\"\n              value={obj.startYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].startYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"End Year\"\n              value={obj.endYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].endYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n        </Grid>\n      ))}\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>\n            setEducation([\n              ...education,\n              {\n                institutionName: \"\",\n                startYear: \"\",\n                endYear: \"\",\n              },\n            ])\n          }\n          className={classes.inputBox}\n        >\n          Add another institution details\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [signupDetails, setSignupDetails] = useState({\n    type: \"applicant\",\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    education: [],\n    skills: [],\n    resume: \"\",\n    profile: \"\",\n    bio: \"\",\n    contactNumber: \"\",\n  });\n\n  const [phone, setPhone] = useState(\"\");\n\n  const [education, setEducation] = useState([\n    {\n      institutionName: \"\",\n      startYear: \"\",\n      endYear: \"\",\n    },\n  ]);\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    password: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    name: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setSignupDetails({\n      ...signupDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        required: true,\n        untouched: false,\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    console.log(education);\n\n    let updatedDetails = {\n      ...signupDetails,\n      education: education\n        .filter((obj) => obj.institutionName.trim() !== \"\")\n        .map((obj) => {\n          if (obj[\"endYear\"] === \"\") {\n            delete obj[\"endYear\"];\n          }\n          return obj;\n        }),\n    };\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  const handleLoginRecruiter = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    let updatedDetails = {\n      ...signupDetails,\n    };\n    if (phone !== \"\") {\n      updatedDetails = {\n        ...signupDetails,\n        contactNumber: `+${phone}`,\n      };\n    } else {\n      updatedDetails = {\n        ...signupDetails,\n        contactNumber: \"\",\n      };\n    }\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    console.log(updatedDetails);\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <div className=\"signUp_container\">\n      <Paper elevation={1} className=\"card\">\n        <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n          <Grid item>\n            <Typography variant=\"h3\" component=\"h2\">\n              Signup\n            </Typography>\n          </Grid>\n          <Grid item>\n            <TextField\n              select\n              label=\"Category\"\n              variant=\"outlined\"\n              className={classes.inputBox}\n              value={signupDetails.type}\n              onChange={(event) => {\n                handleInput(\"type\", event.target.value);\n              }}\n            >\n              <MenuItem value=\"applicant\">Applicant</MenuItem>\n              <MenuItem value=\"recruiter\">Recruiter</MenuItem>\n            </TextField>\n          </Grid>\n          <Grid item>\n            <TextField\n              label=\"Name\"\n              value={signupDetails.name}\n              onChange={(event) => handleInput(\"name\", event.target.value)}\n              className={classes.inputBox}\n              error={inputErrorHandler.name.error}\n              helperText={inputErrorHandler.name.message}\n              onBlur={(event) => {\n                if (event.target.value === \"\") {\n                  handleInputError(\"name\", true, \"Name is required\");\n                } else {\n                  handleInputError(\"name\", false, \"\");\n                }\n              }}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item>\n            <EmailInput\n              label=\"Email\"\n              value={signupDetails.email}\n              onChange={(event) => handleInput(\"email\", event.target.value)}\n              inputErrorHandler={inputErrorHandler}\n              handleInputError={handleInputError}\n              className={classes.inputBox}\n              required={true}\n            />\n          </Grid>\n          <Grid item>\n            <PasswordInput\n              label=\"Password\"\n              value={signupDetails.password}\n              onChange={(event) => handleInput(\"password\", event.target.value)}\n              className={classes.inputBox}\n              error={inputErrorHandler.password.error}\n              helperText={inputErrorHandler.password.message}\n              onBlur={(event) => {\n                if (event.target.value === \"\") {\n                  handleInputError(\"password\", true, \"Password is required\");\n                } else {\n                  handleInputError(\"password\", false, \"\");\n                }\n              }}\n            />\n          </Grid>\n          {signupDetails.type === \"applicant\" ? (\n            <>\n              <MultifieldInput\n                education={education}\n                setEducation={setEducation}\n              />\n              <Grid item>\n                <ChipInput\n                  className={classes.inputBox}\n                  label=\"Skills\"\n                  variant=\"outlined\"\n                  helperText=\"Press enter to add skills\"\n                  onChange={(chips) =>\n                    setSignupDetails({ ...signupDetails, skills: chips })\n                  }\n                />\n              </Grid>\n              <Grid item>\n                <FileUploadInput\n                  className={classes.inputBox}\n                  label=\"Resume (.pdf)\"\n                  icon={<DescriptionIcon />}\n                  // value={files.resume}\n                  // onChange={(event) =>\n                  //   setFiles({\n                  //     ...files,\n                  //     resume: event.target.files[0],\n                  //   })\n                  // }\n                  uploadTo={apiList.uploadResume}\n                  handleInput={handleInput}\n                  identifier={\"resume\"}\n                />\n              </Grid>\n              <Grid item>\n                <FileUploadInput\n                  className={classes.inputBox}\n                  label=\"Profile Photo (.jpg/.png)\"\n                  icon={<FaceIcon />}\n                  // value={files.profileImage}\n                  // onChange={(event) =>\n                  //   setFiles({\n                  //     ...files,\n                  //     profileImage: event.target.files[0],\n                  //   })\n                  // }\n                  uploadTo={apiList.uploadProfileImage}\n                  handleInput={handleInput}\n                  identifier={\"profile\"}\n                />\n              </Grid>\n            </>\n          ) : (\n            <>\n              <Grid item style={{ width: \"100%\" }}>\n                <TextField\n                  label=\"Bio (upto 250 words)\"\n                  multiline\n                  rows={8}\n                  style={{ width: \"100%\" }}\n                  variant=\"outlined\"\n                  value={signupDetails.bio}\n                  onChange={(event) => {\n                    if (\n                      event.target.value.split(\" \").filter(function (n) {\n                        return n != \"\";\n                      }).length <= 250\n                    ) {\n                      handleInput(\"bio\", event.target.value);\n                    }\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <PhoneInput\n                  country={\"in\"}\n                  value={phone}\n                  onChange={(phone) => setPhone(phone)}\n                />\n              </Grid>\n            </>\n          )}\n\n          <Grid item>\n            <button\n              onClick={() => {\n                signupDetails.type === \"applicant\"\n                  ? handleLogin()\n                  : handleLoginRecruiter();\n              }}\n              className=\"btn\"\n            >\n              Signup\n            </button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Login;\n\n// {/* <Grid item>\n//           <PasswordInput\n//             label=\"Re-enter Password\"\n//             value={signupDetails.tmpPassword}\n//             onChange={(event) => handleInput(\"tmpPassword\", event.target.value)}\n//             className={classes.inputBox}\n//             labelWidth={140}\n//             helperText={inputErrorHandler.tmpPassword.message}\n//             error={inputErrorHandler.tmpPassword.error}\n//             onBlur={(event) => {\n//               if (event.target.value !== signupDetails.password) {\n//                 handleInputError(\n//                   \"tmpPassword\",\n//                   true,\n//                   \"Passwords are not same.\"\n//                 );\n//               }\n//             }}\n//           />\n//         </Grid> */}\n","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\Home.js",["124","125","126","127","128","129","130","131","132","133","134"],"import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport axios from \"axios\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport { userType } from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  button: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst JobTile = (props) => {\n  const classes = useStyles();\n  const { job } = props;\n  const setPopup = useContext(SetPopupContext);\n\n  const [open, setOpen] = useState(false);\n  const [sop, setSop] = useState(\"\");\n\n  const handleClose = () => {\n    setOpen(false);\n    setSop(\"\");\n  };\n\n  const handleApply = () => {\n    console.log(job._id);\n    console.log(sop);\n    axios\n      .post(\n        `${apiList.jobs}/${job._id}/applications`,\n        {\n          sop: sop,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        handleClose();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleClose();\n      });\n  };\n\n  const deadline = new Date(job.deadline).toLocaleDateString();\n\n  return (\n    <div className=\"job_card\">\n      <Paper className=\"card\" elevation={1}>\n        <div>\n          <div>\n            <div className=\"job_title\">\n              <div>\n                <h4>{job.title}</h4>\n              </div>\n              <div item>\n                <Rating\n                  value={job.rating !== -1 ? job.rating : null}\n                  readOnly\n                />\n              </div>\n            </div>\n\n            <div className=\"job_type\">\n              <div> Role : {job.jobType}</div>\n              <div>Salary : &#8377; {job.salary} per month</div>\n              <div>\n                Duration :{\" \"}\n                {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\n              </div>\n            </div>\n\n            <div className=\"posted_by\">\n              <div>Posted By : {job.recruiter.name}</div>\n              <div>LinkedIn :Click Here</div>\n              <div>Application Deadline : {deadline}</div>\n            </div>\n\n            <div className=\"apply_job\">\n              <div>\n                {job.skillsets.map((skill) => (\n                  <Chip\n                    label={skill}\n                    style={{\n                      margin: \"4px\",\n                      fontSize: \"16px\",\n                    }}\n                  />\n                ))}\n              </div>\n\n              <div className=\"apply\">\n                <button\n                  onClick={() => {\n                    setOpen(true);\n                  }}\n                  disabled={userType() === \"recruiter\"}\n                >\n                  Apply\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Modal\n          open={open}\n          onClose={handleClose}\n          className={classes.popupDialog}\n        >\n          <Paper\n            style={{\n              padding: \"20px\",\n              outline: \"none\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              minWidth: \"50%\",\n              alignItems: \"center\",\n            }}\n          >\n            <TextField\n              label=\"Write SOP (upto 250 words)\"\n              multiline\n              rows={8}\n              style={{ width: \"100%\", marginBottom: \"30px\" }}\n              variant=\"outlined\"\n              value={sop}\n              onChange={(event) => {\n                if (\n                  event.target.value.split(\" \").filter(function (n) {\n                    return n != \"\";\n                  }).length <= 250\n                ) {\n                  setSop(event.target.value);\n                }\n              }}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => handleApply()}\n            >\n              Submit\n            </Button>\n          </Paper>\n        </Modal>\n      </Paper>\n    </div>\n  );\n};\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <div className=\"filter_job\">\n      <Paper\n        className=\"card\"\n        // style={{\n        //   padding: \"50px\",\n        //   outline: \"none\",\n        //   minWidth: \"50%\",\n        // }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Job Type\n            </Grid>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"fullTime\"\n                      checked={searchOptions.jobType.fullTime}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Full Time\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"partTime\"\n                      checked={searchOptions.jobType.partTime}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Part Time\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"wfh\"\n                      checked={searchOptions.jobType.wfh}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Work From Home\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Salary\n            </Grid>\n            <Grid item xs={9}>\n              <Slider\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={(value) => {\n                  return value * (100000 / 100);\n                }}\n                marks={[\n                  { value: 0, label: \"0\" },\n                  { value: 100, label: \"100000\" },\n                ]}\n                value={searchOptions.salary}\n                onChange={(event, value) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    salary: value,\n                  })\n                }\n              />\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Duration\n            </Grid>\n            <Grid item xs={9}>\n              <TextField\n                select\n                label=\"Duration\"\n                variant=\"outlined\"\n                fullWidth\n                value={searchOptions.duration}\n                onChange={(event) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    duration: event.target.value,\n                  })\n                }\n              >\n                <MenuItem value=\"0\">All</MenuItem>\n                <MenuItem value=\"1\">1</MenuItem>\n                <MenuItem value=\"2\">2</MenuItem>\n                <MenuItem value=\"3\">3</MenuItem>\n                <MenuItem value=\"4\">4</MenuItem>\n                <MenuItem value=\"5\">5</MenuItem>\n                <MenuItem value=\"6\">6</MenuItem>\n                <MenuItem value=\"7\">7</MenuItem>\n              </TextField>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={3}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"Salary\"\n                    checked={searchOptions.sort.salary.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"salary\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"salary\">\n                    <Typography>Salary</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.salary.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            desc: !searchOptions.sort.salary.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.salary.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"duration\"\n                    checked={searchOptions.sort.duration.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"duration\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"duration\">\n                    <Typography>Duration</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.duration.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            desc: !searchOptions.sort.duration.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.duration.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={3}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort.rating.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.rating.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            desc: !searchOptions.sort.rating.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.rating.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <button onClick={() => getData()}>Apply</button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\n\nconst Home = (props) => {\n  const [jobs, setJobs] = useState([]);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    query: \"\",\n    jobType: {\n      fullTime: false,\n      partTime: false,\n      wfh: false,\n    },\n    salary: [0, 100],\n    duration: \"0\",\n    sort: {\n      salary: {\n        status: false,\n        desc: false,\n      },\n      duration: {\n        status: false,\n        desc: false,\n      },\n      rating: {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [];\n    if (searchOptions.query !== \"\") {\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\n    }\n    if (searchOptions.jobType.fullTime) {\n      searchParams = [...searchParams, `jobType=Full%20Time`];\n    }\n    if (searchOptions.jobType.partTime) {\n      searchParams = [...searchParams, `jobType=Part%20Time`];\n    }\n    if (searchOptions.jobType.wfh) {\n      searchParams = [...searchParams, `jobType=Work%20From%20Home`];\n    }\n    if (searchOptions.salary[0] != 0) {\n      searchParams = [\n        ...searchParams,\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\n      ];\n    }\n    if (searchOptions.salary[1] != 100) {\n      searchParams = [\n        ...searchParams,\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\n      ];\n    }\n    if (searchOptions.duration != \"0\") {\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\n    }\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = apiList.jobs;\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setJobs(\n          response.data.filter((obj) => {\n            const today = new Date();\n            const deadline = new Date(obj.deadline);\n            return deadline > today;\n          })\n        );\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  return (\n    <>\n      <div className=\"main_conatiner\">\n        <div className=\"home-container\">\n          {jobs.length > 0 ? (\n            <div className=\"searchJob\">\n              <TextField\n                label=\"Search Jobs\"\n                value={searchOptions.query}\n                onChange={(event) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    query: event.target.value,\n                  })\n                }\n                onKeyPress={(ev) => {\n                  if (ev.key === \"Enter\") {\n                    getData();\n                  }\n                }}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment>\n                      <IconButton onClick={() => getData()}>\n                        <SearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n                style={{ width: \"500px\" }}\n                variant=\"outlined\"\n              />\n            </div>\n          ) : (\n            \"\"\n          )}\n          <div className=\"job-container\">\n            {jobs.length > 0 ? (\n              jobs.map((job) => {\n                return <JobTile job={job} />;\n              })\n            ) : (\n              <div className=\"sorry_line\">\n                <h2>Sorry We don't have matching jobs :) </h2>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <FilterPopup\n          open={filterOpen}\n          searchOptions={searchOptions}\n          setSearchOptions={setSearchOptions}\n          handleClose={() => setFilterOpen(false)}\n          getData={() => {\n            getData();\n            setFilterOpen(false);\n          }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\recruiter\\MyJobs.js",["135","136","137","138","139","140"],"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\recruiter\\CreateJobs.js",["141","142","143","144"],"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\recruiter\\AcceptedApplicants.js",["145","146","147","148","149","150","151","152","153"],"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\recruiter\\Profile.js",["154","155","156","157","158"],"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\component\\recruiter\\JobApplications.js",["159","160","161","162","163","164"],"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\lib\\MessagePopup.js",["165"],"import { Snackbar, Slide } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nconst MessagePopup = (props) => {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.setOpen(false);\n  };\n  return (\n    <Snackbar open={props.open} onClose={handleClose} autoHideDuration={2000}>\n      <Alert onClose={handleClose} severity={props.severity}>\n        {props.message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default MessagePopup;\n","C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\lib\\isAuth.js",[],"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\lib\\PasswordInput.js",[],"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\lib\\apiList.js",[],"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\lib\\EmailInput.js",[],"C:\\Users\\SHUBHAM GUPTA\\Desktop\\online-job-portal\\frontend\\src\\lib\\FileUploadInput.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":19,"column":8,"nodeType":"172","messageId":"173","endLine":19,"endColumn":14},{"ruleId":"170","severity":1,"message":"174","line":4,"column":3,"nodeType":"172","messageId":"173","endLine":4,"endColumn":12},{"ruleId":"170","severity":1,"message":"175","line":5,"column":3,"nodeType":"172","messageId":"173","endLine":5,"endColumn":9},{"ruleId":"176","severity":1,"message":"177","line":16,"column":6,"nodeType":"178","endLine":16,"endColumn":8,"suggestions":"179"},{"ruleId":"170","severity":1,"message":"175","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":16},{"ruleId":"170","severity":1,"message":"180","line":6,"column":3,"nodeType":"172","messageId":"173","endLine":6,"endColumn":13},{"ruleId":"170","severity":1,"message":"181","line":7,"column":3,"nodeType":"172","messageId":"173","endLine":7,"endColumn":17},{"ruleId":"170","severity":1,"message":"174","line":10,"column":3,"nodeType":"172","messageId":"173","endLine":10,"endColumn":12},{"ruleId":"170","severity":1,"message":"182","line":13,"column":3,"nodeType":"172","messageId":"173","endLine":13,"endColumn":9},{"ruleId":"170","severity":1,"message":"183","line":14,"column":3,"nodeType":"172","messageId":"173","endLine":14,"endColumn":19},{"ruleId":"170","severity":1,"message":"184","line":15,"column":3,"nodeType":"172","messageId":"173","endLine":15,"endColumn":12},{"ruleId":"170","severity":1,"message":"185","line":16,"column":3,"nodeType":"172","messageId":"173","endLine":16,"endColumn":11},{"ruleId":"170","severity":1,"message":"186","line":17,"column":3,"nodeType":"172","messageId":"173","endLine":17,"endColumn":11},{"ruleId":"170","severity":1,"message":"187","line":122,"column":9,"nodeType":"172","messageId":"173","endLine":122,"endColumn":17},{"ruleId":"176","severity":1,"message":"188","line":232,"column":6,"nodeType":"178","endLine":232,"endColumn":8,"suggestions":"189"},{"ruleId":"170","severity":1,"message":"190","line":5,"column":3,"nodeType":"172","messageId":"173","endLine":5,"endColumn":13},{"ruleId":"170","severity":1,"message":"191","line":6,"column":3,"nodeType":"172","messageId":"173","endLine":6,"endColumn":8},{"ruleId":"170","severity":1,"message":"192","line":109,"column":10,"nodeType":"172","messageId":"173","endLine":109,"endColumn":18},{"ruleId":"170","severity":1,"message":"193","line":109,"column":20,"nodeType":"172","messageId":"173","endLine":109,"endColumn":31},{"ruleId":"170","severity":1,"message":"194","line":110,"column":10,"nodeType":"172","messageId":"173","endLine":110,"endColumn":14},{"ruleId":"176","severity":1,"message":"188","line":137,"column":6,"nodeType":"178","endLine":137,"endColumn":8,"suggestions":"195"},{"ruleId":"170","severity":1,"message":"196","line":169,"column":9,"nodeType":"172","messageId":"173","endLine":169,"endColumn":20},{"ruleId":"170","severity":1,"message":"197","line":173,"column":9,"nodeType":"172","messageId":"173","endLine":173,"endColumn":20},{"ruleId":"170","severity":1,"message":"198","line":10,"column":3,"nodeType":"172","messageId":"173","endLine":10,"endColumn":8},{"ruleId":"199","severity":1,"message":"200","line":460,"column":34,"nodeType":"201","messageId":"202","endLine":460,"endColumn":36},{"ruleId":"170","severity":1,"message":"184","line":15,"column":3,"nodeType":"172","messageId":"173","endLine":15,"endColumn":12},{"ruleId":"170","severity":1,"message":"203","line":20,"column":8,"nodeType":"172","messageId":"173","endLine":20,"endColumn":18},{"ruleId":"170","severity":1,"message":"204","line":23,"column":8,"nodeType":"172","messageId":"173","endLine":23,"endColumn":22},{"ruleId":"199","severity":1,"message":"200","line":187,"column":30,"nodeType":"201","messageId":"202","endLine":187,"endColumn":32},{"ruleId":"170","severity":1,"message":"205","line":210,"column":9,"nodeType":"172","messageId":"173","endLine":210,"endColumn":16},{"ruleId":"170","severity":1,"message":"194","line":211,"column":11,"nodeType":"172","messageId":"173","endLine":211,"endColumn":15},{"ruleId":"170","severity":1,"message":"196","line":211,"column":17,"nodeType":"172","messageId":"173","endLine":211,"endColumn":28},{"ruleId":"176","severity":1,"message":"188","line":565,"column":6,"nodeType":"178","endLine":565,"endColumn":8,"suggestions":"206"},{"ruleId":"199","severity":1,"message":"200","line":581,"column":33,"nodeType":"201","messageId":"202","endLine":581,"endColumn":35},{"ruleId":"199","severity":1,"message":"200","line":587,"column":33,"nodeType":"201","messageId":"202","endLine":587,"endColumn":35},{"ruleId":"199","severity":1,"message":"200","line":593,"column":32,"nodeType":"201","messageId":"202","endLine":593,"endColumn":34},{"ruleId":"170","severity":1,"message":"184","line":15,"column":3,"nodeType":"172","messageId":"173","endLine":15,"endColumn":12},{"ruleId":"170","severity":1,"message":"203","line":21,"column":8,"nodeType":"172","messageId":"173","endLine":21,"endColumn":18},{"ruleId":"176","severity":1,"message":"188","line":756,"column":6,"nodeType":"178","endLine":756,"endColumn":8,"suggestions":"207"},{"ruleId":"199","severity":1,"message":"200","line":772,"column":33,"nodeType":"201","messageId":"202","endLine":772,"endColumn":35},{"ruleId":"199","severity":1,"message":"200","line":778,"column":33,"nodeType":"201","messageId":"202","endLine":778,"endColumn":35},{"ruleId":"199","severity":1,"message":"200","line":784,"column":32,"nodeType":"201","messageId":"202","endLine":784,"endColumn":34},{"ruleId":"170","severity":1,"message":"208","line":1,"column":22,"nodeType":"172","messageId":"173","endLine":1,"endColumn":31},{"ruleId":"170","severity":1,"message":"175","line":3,"column":3,"nodeType":"172","messageId":"173","endLine":3,"endColumn":9},{"ruleId":"170","severity":1,"message":"190","line":5,"column":3,"nodeType":"172","messageId":"173","endLine":5,"endColumn":13},{"ruleId":"170","severity":1,"message":"191","line":6,"column":3,"nodeType":"172","messageId":"173","endLine":6,"endColumn":8},{"ruleId":"170","severity":1,"message":"181","line":7,"column":3,"nodeType":"172","messageId":"173","endLine":7,"endColumn":17},{"ruleId":"170","severity":1,"message":"174","line":10,"column":3,"nodeType":"172","messageId":"173","endLine":10,"endColumn":12},{"ruleId":"170","severity":1,"message":"182","line":13,"column":3,"nodeType":"172","messageId":"173","endLine":13,"endColumn":9},{"ruleId":"170","severity":1,"message":"183","line":14,"column":3,"nodeType":"172","messageId":"173","endLine":14,"endColumn":19},{"ruleId":"170","severity":1,"message":"184","line":15,"column":3,"nodeType":"172","messageId":"173","endLine":15,"endColumn":12},{"ruleId":"170","severity":1,"message":"185","line":16,"column":3,"nodeType":"172","messageId":"173","endLine":16,"endColumn":11},{"ruleId":"170","severity":1,"message":"209","line":20,"column":10,"nodeType":"172","messageId":"173","endLine":20,"endColumn":19},{"ruleId":"170","severity":1,"message":"187","line":450,"column":9,"nodeType":"172","messageId":"173","endLine":450,"endColumn":17},{"ruleId":"176","severity":1,"message":"188","line":751,"column":6,"nodeType":"178","endLine":751,"endColumn":8,"suggestions":"210"},{"ruleId":"170","severity":1,"message":"175","line":3,"column":3,"nodeType":"172","messageId":"173","endLine":3,"endColumn":9},{"ruleId":"170","severity":1,"message":"190","line":5,"column":3,"nodeType":"172","messageId":"173","endLine":5,"endColumn":13},{"ruleId":"170","severity":1,"message":"191","line":6,"column":3,"nodeType":"172","messageId":"173","endLine":6,"endColumn":8},{"ruleId":"176","severity":1,"message":"188","line":53,"column":6,"nodeType":"178","endLine":53,"endColumn":8,"suggestions":"211"},{"ruleId":"199","severity":1,"message":"200","line":173,"column":34,"nodeType":"201","messageId":"202","endLine":173,"endColumn":36},{"ruleId":"170","severity":1,"message":"181","line":7,"column":3,"nodeType":"172","messageId":"173","endLine":7,"endColumn":17},{"ruleId":"170","severity":1,"message":"174","line":10,"column":3,"nodeType":"172","messageId":"173","endLine":10,"endColumn":12},{"ruleId":"170","severity":1,"message":"182","line":13,"column":3,"nodeType":"172","messageId":"173","endLine":13,"endColumn":9},{"ruleId":"170","severity":1,"message":"184","line":15,"column":3,"nodeType":"172","messageId":"173","endLine":15,"endColumn":12},{"ruleId":"170","severity":1,"message":"185","line":16,"column":3,"nodeType":"172","messageId":"173","endLine":16,"endColumn":11},{"ruleId":"176","severity":1,"message":"188","line":715,"column":6,"nodeType":"178","endLine":715,"endColumn":8,"suggestions":"212"},{"ruleId":"170","severity":1,"message":"213","line":1,"column":20,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'isAuth' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPopup'. Either include it or remove the dependency array.","ArrayExpression",["216"],"'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'Slider' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'MenuItem' is defined but never used.","'Checkbox' is defined but never used.","'colorSet' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["217"],"'Typography' is defined but never used.","'Modal' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'open' is assigned a value but never used.",["218"],"'handleClose' is assigned a value but never used.","'editDetails' is assigned a value but never used.","'Input' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Pagination' is defined but never used.","'FilterListIcon' is defined but never used.","'classes' is assigned a value but never used.",["219"],["220"],"'useEffect' is defined but never used.","'useParams' is defined but never used.",["221"],["222"],["223"],"'Slide' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"226","fix":"228"},{"desc":"226","fix":"229"},{"desc":"226","fix":"230"},{"desc":"226","fix":"231"},{"desc":"226","fix":"232"},{"desc":"226","fix":"233"},"Update the dependencies array to be: [setPopup]",{"range":"234","text":"235"},"Update the dependencies array to be: [getData]",{"range":"236","text":"237"},{"range":"238","text":"237"},{"range":"239","text":"237"},{"range":"240","text":"237"},{"range":"241","text":"237"},{"range":"242","text":"237"},{"range":"243","text":"237"},[422,424],"[setPopup]",[6018,6020],"[getData]",[3404,3406],[16926,16928],[22526,22528],[22553,22555],[1039,1041],[20624,20626]]